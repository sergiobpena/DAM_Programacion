/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principal;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import java.util.HashMap;

/**
 *
 * @author Sergio
 */
public class procesador extends javax.swing.JFrame {

    /**
     * Creates new form procesador
     */
    public procesador() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBarra = new javax.swing.JMenuBar();
        jMenuArchivo = new javax.swing.JMenu();
        jMenuItNovo = new javax.swing.JMenuItem();
        jMenuItAbrir = new javax.swing.JMenuItem();
        jMenuItGardar = new javax.swing.JMenuItem();
        jMenuItGardarComo = new javax.swing.JMenuItem();
        jMenuItSair = new javax.swing.JMenuItem();
        jMenuEdicion = new javax.swing.JMenu();
        jMenuItCopiar = new javax.swing.JMenuItem();
        jMenuItCortar = new javax.swing.JMenuItem();
        jMenuItPegar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jMenuArchivo.setText("Archivo");

        jMenuItNovo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItNovo.setText("Novo");
        jMenuItNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItNovoActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItNovo);

        jMenuItAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, 0));
        jMenuItAbrir.setText("Abrir");
        jMenuItAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItAbrirActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItAbrir);

        jMenuItGardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItGardar.setText("Gardar");
        jMenuItGardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItGardarActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItGardar);

        jMenuItGardarComo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItGardarComo.setText("Gardar como");
        jMenuItGardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItGardarComoActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItGardarComo);

        jMenuItSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItSair.setText("Sair");
        jMenuItSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItSairActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItSair);

        jMenuBarra.add(jMenuArchivo);

        jMenuEdicion.setText("Editar");
        jMenuEdicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEdicionActionPerformed(evt);
            }
        });

        jMenuItCopiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItCopiar.setText("Copiar");
        jMenuItCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItCopiarActionPerformed(evt);
            }
        });
        jMenuEdicion.add(jMenuItCopiar);

        jMenuItCortar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItCortar.setText("Cortar");
        jMenuItCortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItCortarActionPerformed(evt);
            }
        });
        jMenuEdicion.add(jMenuItCortar);

        jMenuItPegar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItPegar.setText("Pegar");
        jMenuItPegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItPegarActionPerformed(evt);
            }
        });
        jMenuEdicion.add(jMenuItPegar);

        jMenuBarra.add(jMenuEdicion);

        setJMenuBar(jMenuBarra);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//Menu Archivo
    private void jMenuItSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItSairActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItSairActionPerformed

    private void jMenuItGardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItGardarComoActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int seleccion = fileChooser.showSaveDialog(jTextArea1);
        if (seleccion == JFileChooser.APPROVE_OPTION){
            this.archivo= fileChooser.getSelectedFile();
            try {
                this.archivo.createNewFile();
                FileWriter fw = new FileWriter(this.archivo);
                PrintWriter pw = new PrintWriter (fw);
                pw.write(jTextArea1.getText());
                fw.close();
            } catch (IOException ex) {
                Logger.getLogger(procesador.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItGardarComoActionPerformed

    private void jMenuItGardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItGardarActionPerformed
        // TODO add your handling code here:
        if (this.archivo==null){
            JFileChooser jc = new JFileChooser();
            int sel= jc.showSaveDialog(jTextArea1);
            if (sel == JFileChooser.APPROVE_OPTION){
                this.archivo = jc.getSelectedFile();
                try {
                    this.archivo.createNewFile();

                FileWriter fw = new FileWriter(this.archivo);
                PrintWriter pw = new PrintWriter(fw);
                pw.write(jTextArea1.getText());
                fw.close();
                } catch (IOException ex) {
                    Logger.getLogger(procesador.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else{
            if(this.archivo.exists()){
                try{
                    FileWriter fw = new FileWriter(this.archivo);
                    fw.write(this.jTextArea1.getText());
                    fw.close();
                }catch (IOException e){
                    Logger.getLogger(procesador.class.getName()).log(Level.SEVERE,null,e);
                }
            }
        }
    }//GEN-LAST:event_jMenuItGardarActionPerformed

    private void jMenuItAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItAbrirActionPerformed
        // TODO add your handling code here:
        JFileChooser jc = new JFileChooser();
        int sel = jc.showOpenDialog(this.jTextArea1);
        if (sel == JFileChooser.APPROVE_OPTION){
            this.archivo = jc.getSelectedFile();
            try {
                FileReader fr = new FileReader(this.archivo);
                BufferedReader br = new BufferedReader(fr);
                String linea;
                while((linea=br.readLine())!= null){
                    this.jTextArea1.append(linea);
                }
                
                fr.close();
            } catch (IOException ex) {
                Logger.getLogger(procesador.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItAbrirActionPerformed

    private void jMenuItNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItNovoActionPerformed
        // TODO add your handling code here:
        this.archivo=null;
        this.jTextArea1.setText("");
    }//GEN-LAST:event_jMenuItNovoActionPerformed

    private void jMenuEdicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEdicionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuEdicionActionPerformed

    private void jMenuItCortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItCortarActionPerformed
        // TODO add your handling code here:
        this.jTextArea1.cut();
        
    }//GEN-LAST:event_jMenuItCortarActionPerformed

    private void jMenuItPegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItPegarActionPerformed
        // TODO add your handling code here:
        this.jTextArea1.paste();
    }//GEN-LAST:event_jMenuItPegarActionPerformed

    private void jMenuItCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItCopiarActionPerformed
        // TODO add your handling code here:
        this.jTextArea1.copy();
    }//GEN-LAST:event_jMenuItCopiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(procesador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(procesador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(procesador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(procesador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new procesador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenuArchivo;
    private javax.swing.JMenuBar jMenuBarra;
    private javax.swing.JMenu jMenuEdicion;
    private javax.swing.JMenuItem jMenuItAbrir;
    private javax.swing.JMenuItem jMenuItCopiar;
    private javax.swing.JMenuItem jMenuItCortar;
    private javax.swing.JMenuItem jMenuItGardar;
    private javax.swing.JMenuItem jMenuItGardarComo;
    private javax.swing.JMenuItem jMenuItNovo;
    private javax.swing.JMenuItem jMenuItPegar;
    private javax.swing.JMenuItem jMenuItSair;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
private File archivo= null;
}

